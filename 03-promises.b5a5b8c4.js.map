{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACaC,SAASC,cAAc,SAe/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAMC,iBACN,MAAMC,EAAQF,EAAMG,cAAcD,MAC5BE,EAAOJ,EAAMG,cAAcC,KAGjC,IAAIC,EACAC,EAHWN,EAAMG,cAAcI,OAGVC,MACrBC,EAAY,EACZC,EAASC,OAAOT,EAAMM,OAE1BH,EAAUO,aAAY,MA1BxB,SAAuBC,EAAUX,GAC/B,OAAO,IAAIY,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SACP,GAClBJ,EAAI,uBAAqBF,QAAiBX,OAExCc,EAAE,sBAAoBH,QAAeX,MAAU,GAEnDA,EAAM,G,EAkBRkB,CAAcX,EAAWC,GAExBW,MAAMb,IACLc,EAAA3B,GAAS4B,OAAOC,QAAQhB,EAAM,CAACiB,QAAS,KAAQ,IAEjDC,OAAOlB,IACNc,EAAA3B,GAAS4B,OAAOI,QAAQnB,EAAM,CAACiB,QAAS,KAAQ,IAGlDhB,GAAa,EACbH,GAAe,EACfI,GAAUC,OAAOP,EAAKI,OAEjBF,GACHsB,cAAcvB,EAAQ,GAEvB,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random();\n      if (shouldResolve > 0.3) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    },delay);\n  });\n}\n\nform.addEventListener('submit', submitPromise);\n\nfunction submitPromise (event) {\n  event.preventDefault();\n  const delay = event.currentTarget.delay;\n  const step = event.currentTarget.step;\n  const amount = event.currentTarget.amount;\n\n  let timerId;\n  let amountInter = amount.value;\n  let positionP = 1;\n  let delayP = Number(delay.value);\n\n  timerId = setInterval(() => {\n    createPromise(positionP, delayP)\n\n    .then((value) => {\n      Notiflix.Notify.success(value,{timeout: 4000,},);\n    })\n    .catch((value) => {\n      Notiflix.Notify.failure(value,{timeout: 4000,},);\n    });\n\n    positionP += 1;\n    amountInter -= 1;\n    delayP += Number(step.value);\n\n    if (!amountInter) {\n      clearInterval(timerId);\n    }\n  }, 1000);\n}"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","currentTarget","step","timerId","amountInter","amount","value","positionP","delayP","Number","setInterval","position","Promise","res","rej","setTimeout","Math","random","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","timeout","catch","failure","clearInterval"],"version":3,"file":"03-promises.b5a5b8c4.js.map"}