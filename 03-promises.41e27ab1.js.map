{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACaC,SAASC,cAAc,SAe/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAMC,iBACN,IAIIC,EAJEC,EAAQH,EAAMI,cAAcD,MAC5BE,EAAOL,EAAMI,cAAcC,KAI7BC,EAHWN,EAAMI,cAAcG,OAGVC,MACrBC,EAAY,EACZC,EAASC,OAAOR,EAAMK,OAE1BN,EAAUU,aAAY,YA1BxB,SAAuBC,EAAUV,GAC/B,OAAO,IAAIW,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SACP,GAClBJ,EAAI,uBAAwCK,OAAfP,EAAS,QAAYO,OAANjB,EAAM,OAEhDa,EAAE,sBAAqCI,OAAfP,EAAS,QAAYO,OAANjB,EAAM,M,GAEjDA,E,KAkBFkB,CAAcZ,EAAWC,GACxBY,MAAK,SAACd,GACLe,EAAA5B,GAAS6B,OAAOC,QAAQjB,EAAM,CAACkB,QAAS,K,IAEzCC,OAAM,SAACnB,GACNe,EAAA5B,GAAS6B,OAAOI,QAAQpB,EAAM,CAACkB,QAAS,K,IAG1CjB,GAAa,EACbH,GAAe,EACfI,GAAUC,OAAON,EAAKG,OAEjBF,GACHuB,cAAc3B,E,GAEfG,EAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random();\n      if (shouldResolve > 0.3) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    },delay);\n  });\n}\n\nform.addEventListener('submit', submitPromise);\n\nfunction submitPromise (event) {\n  event.preventDefault();\n  const delay = event.currentTarget.delay;\n  const step = event.currentTarget.step;\n  const amount = event.currentTarget.amount;\n\n  let timerId;\n  let amountInter = amount.value;\n  let positionP = 1;\n  let delayP = Number(delay.value);\n\n  timerId = setInterval(() => {\n    createPromise(positionP, delayP)\n    .then((value) => {\n      Notiflix.Notify.success(value,{timeout: 4000,},);\n    })\n    .catch((value) => {\n      Notiflix.Notify.failure(value,{timeout: 4000,},);\n    });\n\n    positionP += 1;\n    amountInter -= 1;\n    delayP += Number(step.value);\n\n    if (!amountInter) {\n      clearInterval(timerId);\n    }\n  }, step.value);\n}"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","timerId","delay","currentTarget","step","amountInter","amount","value","positionP","delayP","Number","setInterval","position","Promise","res","rej","setTimeout","Math","random","concat","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","success","timeout","catch","failure","clearInterval"],"version":3,"file":"03-promises.41e27ab1.js.map"}